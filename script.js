const POMODORO_CONFIG = {
  WORK_TIME: {
    FAST_WORK_MINUTES: 25,
    MEDIUM_WORK_MINUTES: 45
  },

  BREAK_TIME: {
    // –ü–µ—Ä–µ—Ä—ã–≤ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ —Ü–∏–∫–ª–∞
    FAST_BREAK_MINUTES: 5,
    MEDIUM_BREAK_MINUTES: 15,
    // –ü–µ—Ä–µ—Ä—ã–≤ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞(4 —Ä–∞–±–æ—á–∏—Ö —Ü–∏–∫–ª–æ–≤)
    FAST_LONG_BREAK_MINUTES: 15,
    MEDIUM_LONG_BREAK_MINUTES: 60
  },

  MODE_TYPES: {
    WORK: 'work',
    SHORT_BREAK: 'short_break',
    LONG_BREAK: 'long_break'
  },

  TOTAL_CYCLES: 4,
  UPDATE_INTERVAL_MS: 1000
}

const TIMER_SECONDS = {
  FAST_WORK: POMODORO_CONFIG.WORK_TIME.FAST_WORK_MINUTES * 60,
  MEDIUM_WORK: POMODORO_CONFIG.WORK_TIME.MEDIUM_WORK_MINUTES * 60,

  FAST_BREAK: POMODORO_CONFIG.BREAK_TIME.FAST_BREAK_MINUTES * 60,
  MEDIUM_BREAK: POMODORO_CONFIG.BREAK_TIME.MEDIUM_BREAK_MINUTES * 60,

  FAST_LONG_BREAK: POMODORO_CONFIG.BREAK_TIME.FAST_LONG_BREAK_MINUTES * 60,
  MEDIUM_LONG_BREAK: POMODORO_CONFIG.BREAK_TIME.MEDIUM_LONG_BREAK_MINUTES * 60
}

const timer = document.querySelector('#timer');
const cycleContainer = document.querySelector('.progress-bar__container p');
const progressBars = document.querySelectorAll('.progress-bar__fill');

const fastCycle = document.querySelector('#fastCycle');
const mediumCycle = document.querySelector('#mediumCycle');

const start = document.querySelector('#start');
const pause = document.querySelector('#pause');
const reset = document.querySelector('#reset');

let totalSeconds = TIMER_SECONDS.FAST_WORK; // —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞
let originalSeconds = TIMER_SECONDS.FAST_WORK; // –∏—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–±—Ä–æ—Å–∞
let intervalId = null;
let isRunning = false; // —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
let currentCycle = 1; // —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª (1-4)
let currentMode = POMODORO_CONFIG.MODE_TYPES.WORK; // —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º (—Ä–∞–±–æ—Ç–∞, –∫–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤, –¥–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤)
let previousMode = POMODORO_CONFIG.MODE_TYPES.WORK;

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
const formatTime = (totalSecs) => {
  const mins = Math.floor(totalSecs / 60);
  const secs = totalSecs % 60;
  return `${mins}:${secs.toString().padStart(2, '0')}`;
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –∏ —Ç–µ–∫—Å—Ç–∞ —Ü–∏–∫–ª–æ–≤
function updateProgressBar() {
  clearProgressBars()
  highlightCompletedCycles()
  updateCycleText();
}

function clearProgressBars() {
  // –û—á–∏—â–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  Array.from(progressBars).forEach(item => item.classList.remove('active'));
}

function highlightCompletedCycles() {
  // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã
  for (let i = 0; i < currentCycle; i++) {
    progressBars[i].classList.add('active');
  }
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
function updateCycleText() {
  cycleContainer.textContent = `Cycle ${currentCycle} of ${POMODORO_CONFIG.TOTAL_CYCLES}`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function updateButtonStates() {
  if (isRunning) {
    start.textContent = 'Start';
    start.disabled = true;
    pause.disabled = false;
    reset.disabled = true;

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
    fastCycle.disabled = true;
    mediumCycle.disabled = true;
  } else {
    start.textContent = totalSeconds === originalSeconds ? 'Start' : 'Resume';
    start.disabled = false;
    pause.disabled = true;
    reset.disabled = false;

    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤
    fastCycle.disabled = false;
    mediumCycle.disabled = false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ü–∏–∫–ª–æ–≤
function switchCycle(selectedCycle) {
  // –ù–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Ç–∞–π–º–µ—Ä–∞
  if (isRunning) return;

  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
    isRunning = false;
  }

  // –£–±–∏—Ä–∞–µ–º active —Å–æ –≤—Å–µ—Ö
  fastCycle.classList.remove("active");
  mediumCycle.classList.remove("active");

  // –î–æ–±–∞–≤–ª—è–µ–º –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π
  selectedCycle.classList.add("active");

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è
  originalSeconds = selectedCycle === mediumCycle
    ? TIMER_SECONDS.MEDIUM_WORK
    : TIMER_SECONDS.FAST_WORK;
  totalSeconds = originalSeconds;
  timer.textContent = formatTime(totalSeconds);


  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–∏–∫–ª—ã –∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π
  currentCycle = 1;
  currentMode = POMODORO_CONFIG.MODE_TYPES.WORK;

  updateProgressBar();
  updateButtonStates();
  updateModeUI()
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞
function completeCycle() {
  console.log(`üçÖ –ó–∞–≤–µ—Ä—à–µ–Ω ${currentMode} —Ü–∏–∫–ª ${currentCycle}`);

  switchMode(); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º
  updateProgressBar(); // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
  updateModeUI(); // –û–±–Ω–æ–≤–ª—è–µ–º UI —Ä–µ–∂–∏–º–∞

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  if (currentMode === POMODORO_CONFIG.MODE_TYPES.SHORT_BREAK) {
    document.title = "–í—Ä–µ–º—è –¥–ª—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞!";
  } else if (currentMode === POMODORO_CONFIG.MODE_TYPES.LONG_BREAK) {
    document.title = "–í—Ä–µ–º—è –¥–ª—è –¥–ª–∏–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞!";
  } else {
    document.title = "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç–∞—Ç—å!";
  }
}

// –°–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
mediumCycle.addEventListener("click", () => switchCycle(mediumCycle));
fastCycle.addEventListener("click", () => switchCycle(fastCycle));

// –ó–∞–ø—É—Å–∫/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
start.addEventListener('click', function() {
  if (intervalId) return;

  isRunning = true;
  updateButtonStates();

  intervalId = setInterval(function() {
    totalSeconds -= 1;
    timer.textContent = formatTime(totalSeconds);

    if (totalSeconds <= 0) {
      clearInterval(intervalId);
      intervalId = null;
      isRunning = false;

      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª
      completeCycle();
      updateButtonStates();
    }
  }, POMODORO_CONFIG.UPDATE_INTERVAL_MS);
});

// –ü–∞—É–∑–∞
pause.addEventListener('click', function() {
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
    isRunning = false;
    updateButtonStates();
  }
});

// –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å (–≤—Ä–µ–º—è + —Ü–∏–∫–ª—ã)
reset.addEventListener('click', function() {
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
  }

  isRunning = false;
  currentMode = POMODORO_CONFIG.MODE_TYPES.WORK; // –°–±—Ä–æ—Å —Ä–µ–∂–∏–º–∞!
  currentCycle = 1;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  const isMediumMode = mediumCycle.classList.contains('active');
  totalSeconds = isMediumMode ? TIMER_SECONDS.MEDIUM_WORK : TIMER_SECONDS.FAST_WORK;
  originalSeconds = totalSeconds;

  timer.textContent = formatTime(totalSeconds);
  document.title = "Pomodoro Tracker"; // –°–±—Ä–æ—Å –∑–∞–≥–æ–ª–æ–≤–∫–∞

  updateProgressBar();
  updateModeUI();
  updateButtonStates();
});

// –ú–µ–Ω—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã. –†–∞–±–æ—Ç–∞ -> –û—Ç–¥—ã—Ö / –û—Ç–¥—ã—Ö -> –†–∞–±–æ—Ç–∞
function switchMode() {
  if (isRunning) return;

  const isMediumMode = mediumCycle.classList.contains('active');
  previousMode = currentMode; // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º

  if (currentMode === POMODORO_CONFIG.MODE_TYPES.WORK) {
    // –ó–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–∞–±–æ—Ç—É, –∏–¥–µ–º –Ω–∞ –ø–µ—Ä–µ—Ä—ã–≤
    if (currentCycle === POMODORO_CONFIG.TOTAL_CYCLES) {
      // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ü–∏–∫–ª - –¥–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤
      currentMode = POMODORO_CONFIG.MODE_TYPES.LONG_BREAK;
      totalSeconds = isMediumMode ? TIMER_SECONDS.MEDIUM_LONG_BREAK : TIMER_SECONDS.FAST_LONG_BREAK;
    } else {
      // –û–±—ã—á–Ω—ã–π —Ü–∏–∫–ª - –∫–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤
      currentMode = POMODORO_CONFIG.MODE_TYPES.SHORT_BREAK;
      totalSeconds = isMediumMode ? TIMER_SECONDS.MEDIUM_BREAK : TIMER_SECONDS.FAST_BREAK;
    }

  } else {
    // –ó–∞–≤–µ—Ä—à–∏–ª–∏ –ø–µ—Ä–µ—Ä—ã–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–∞–±–æ—Ç–µ
    currentMode = POMODORO_CONFIG.MODE_TYPES.WORK;

    // –£–ø—Ä–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–æ–º —Ü–∏–∫–ª–æ–≤
    if (previousMode === POMODORO_CONFIG.MODE_TYPES.LONG_BREAK) {
      // –ü–æ—Å–ª–µ –¥–ª–∏–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ - –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è
      currentCycle = 1;
    } else {
      // –ü–æ—Å–ª–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ - —Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª
      currentCycle += 1;
    }

    // –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    totalSeconds = isMediumMode ? TIMER_SECONDS.MEDIUM_WORK : TIMER_SECONDS.FAST_WORK;
  }

  originalSeconds = totalSeconds;
  timer.textContent = formatTime(totalSeconds);
}

// –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI —Ä–µ–∂–∏–º–∞
function updateModeUI() {
  const modeTitle = document.querySelector('.progress-bar__container h2');

  switch(currentMode) {
    case POMODORO_CONFIG.MODE_TYPES.WORK:
      modeTitle.textContent = 'Work Session';
      break;
    case POMODORO_CONFIG.MODE_TYPES.SHORT_BREAK:
      const shortBreakTime = mediumCycle.classList.contains('active') ? '15' : '5';
      modeTitle.textContent = `Short Break (${shortBreakTime} min)`;
      break;
    case POMODORO_CONFIG.MODE_TYPES.LONG_BREAK:
      const longBreakTime = mediumCycle.classList.contains('active') ? '60' : '15';
      modeTitle.textContent = `Long Break (${longBreakTime} min)`;
      break;
  }
}