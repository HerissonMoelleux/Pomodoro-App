const timer = document.getElementById('timer');
const cycleText = document.querySelector('.progress-bar__container p');
const progressBars = document.getElementsByClassName('progress-bar__fill');

const fastCycle = document.getElementById('fastCycle');
const mediumCycle = document.getElementById("mediumCycle");

const start = document.getElementById('start');
const pause = document.getElementById('pause');
const reset = document.getElementById('reset');

let totalSeconds = 25 * 60; // —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞
let originalSeconds = 25 * 60; // –∏—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–±—Ä–æ—Å–∞
let intervalId = null;
let isRunning = false; // —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
let currentCycle = 1; // —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª (1-4)

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
const formatTime = (totalSecs) => {
  const mins = Math.floor(totalSecs / 60);
  const secs = totalSecs % 60;
  return `${mins}:${secs.toString().padStart(2, '0')}`;
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –∏ —Ç–µ–∫—Å—Ç–∞ —Ü–∏–∫–ª–æ–≤
function updateProgressBar() {
  // –û—á–∏—â–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  for (let i = 0; i < progressBars.length; i++) {
    progressBars[i].classList.remove('active');
  }

  // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã
  for (let i = 0; i < currentCycle - 1; i++) {
    progressBars[i].classList.add('active');
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
  cycleText.textContent = `Cycle ${currentCycle} of 4`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function updateButtonStates() {
  if (isRunning) {
    start.textContent = 'Start';
    start.disabled = true;
    pause.disabled = false;
    reset.disabled = true;

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
    fastCycle.disabled = true;
    mediumCycle.disabled = true;
  } else {
    start.textContent = totalSeconds === originalSeconds ? 'Start' : 'Resume';
    start.disabled = false;
    pause.disabled = true;
    reset.disabled = false;

    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤
    fastCycle.disabled = false;
    mediumCycle.disabled = false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ü–∏–∫–ª–æ–≤
function switchCycle(selectedCycle) {
  // –ù–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Ç–∞–π–º–µ—Ä–∞
  if (isRunning) return;

  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
    isRunning = false;
  }

  // –£–±–∏—Ä–∞–µ–º active —Å–æ –≤—Å–µ—Ö
  fastCycle.classList.remove("active");
  mediumCycle.classList.remove("active");

  // –î–æ–±–∞–≤–ª—è–µ–º –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π
  selectedCycle.classList.add("active");

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è
  originalSeconds = selectedCycle === mediumCycle ? 45 * 60 : 25 * 60;
  totalSeconds = originalSeconds;
  timer.textContent = formatTime(totalSeconds);

  updateButtonStates();
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞
function completeCycle() {
  console.log(`üçÖ –ó–∞–≤–µ—Ä—à–µ–Ω —Ü–∏–∫–ª ${currentCycle}`);

  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ü–∏–∫–ª—É
  currentCycle += 1;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ª–∏ –≤—Å–µ —Ü–∏–∫–ª—ã
  if (currentCycle > 4) {
    // –°–±—Ä–æ—Å –Ω–∞ –ø–µ—Ä–≤—ã–π —Ü–∏–∫–ª
    currentCycle = 1;
    alert('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø–æ–ª–Ω—É—é —Å–µ—Å—Å–∏—é –∏–∑ 4 —Ü–∏–∫–ª–æ–≤!');
  } else {
    alert(`üçÖ –¶–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ü–∏–∫–ª—É ${currentCycle}`);
  }

  updateProgressBar();
}

// –°–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
mediumCycle.addEventListener("click", () => switchCycle(mediumCycle));
fastCycle.addEventListener("click", () => switchCycle(fastCycle));

// –ó–∞–ø—É—Å–∫/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
start.addEventListener('click', function() {
  if (intervalId) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫

  isRunning = true;
  updateButtonStates();

  intervalId = setInterval(function() {
    totalSeconds -= 1;
    timer.textContent = formatTime(totalSeconds);

    if (totalSeconds <= 0) {
      clearInterval(intervalId);
      intervalId = null;
      isRunning = false;

      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª
      completeCycle();

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞
      totalSeconds = originalSeconds;
      timer.textContent = formatTime(totalSeconds);

      updateButtonStates();
    }
  }, 1);
});

// –ü–∞—É–∑–∞
pause.addEventListener('click', function() {
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
    isRunning = false;
    updateButtonStates();
  }
});

// –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å (–≤—Ä–µ–º—è + —Ü–∏–∫–ª—ã)
reset.addEventListener('click', function() {
  if (intervalId) {
    clearInterval(intervalId);
    intervalId = null;
  }

  isRunning = false;
  totalSeconds = originalSeconds;
  timer.textContent = formatTime(totalSeconds);

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–∏–∫–ª—ã –Ω–∞ –Ω–∞—á–∞–ª–æ
  currentCycle = 1;
  updateProgressBar();

  updateButtonStates();

  console.log('üîÑ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å: –≤—Ä–µ–º—è –∏ —Ü–∏–∫–ª—ã —Å–±—Ä–æ—à–µ–Ω—ã');
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
updateButtonStates();
updateProgressBar();